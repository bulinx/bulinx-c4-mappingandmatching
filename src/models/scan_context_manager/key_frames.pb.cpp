// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: key_frames.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lidar_localization/models/scan_context_manager/key_frames.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace scan_context_io {

namespace {

const ::google::protobuf::Descriptor* Trans_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Trans_reflection_ = NULL;
const ::google::protobuf::Descriptor* Quat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Quat_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeyFrame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyFrame_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeyFrames_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyFrames_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_key_5fframes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_key_5fframes_2eproto() {
  protobuf_AddDesc_key_5fframes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "key_frames.proto");
  GOOGLE_CHECK(file != NULL);
  Trans_descriptor_ = file->message_type(0);
  static const int Trans_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trans, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trans, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trans, z_),
  };
  Trans_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Trans_descriptor_,
      Trans::default_instance_,
      Trans_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trans, _has_bits_[0]),
      -1,
      -1,
      sizeof(Trans),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trans, _internal_metadata_),
      -1);
  Quat_descriptor_ = file->message_type(1);
  static const int Quat_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quat, w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quat, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quat, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quat, z_),
  };
  Quat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Quat_descriptor_,
      Quat::default_instance_,
      Quat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quat, _has_bits_[0]),
      -1,
      -1,
      sizeof(Quat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quat, _internal_metadata_),
      -1);
  KeyFrame_descriptor_ = file->message_type(2);
  static const int KeyFrame_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyFrame, q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyFrame, t_),
  };
  KeyFrame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeyFrame_descriptor_,
      KeyFrame::default_instance_,
      KeyFrame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyFrame, _has_bits_[0]),
      -1,
      -1,
      sizeof(KeyFrame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyFrame, _internal_metadata_),
      -1);
  KeyFrames_descriptor_ = file->message_type(3);
  static const int KeyFrames_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyFrames, data_),
  };
  KeyFrames_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeyFrames_descriptor_,
      KeyFrames::default_instance_,
      KeyFrames_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyFrames, _has_bits_[0]),
      -1,
      -1,
      sizeof(KeyFrames),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyFrames, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_key_5fframes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Trans_descriptor_, &Trans::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Quat_descriptor_, &Quat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeyFrame_descriptor_, &KeyFrame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeyFrames_descriptor_, &KeyFrames::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_key_5fframes_2eproto() {
  delete Trans::default_instance_;
  delete Trans_reflection_;
  delete Quat::default_instance_;
  delete Quat_reflection_;
  delete KeyFrame::default_instance_;
  delete KeyFrame_reflection_;
  delete KeyFrames::default_instance_;
  delete KeyFrames_reflection_;
}

void protobuf_AddDesc_key_5fframes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_key_5fframes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020key_frames.proto\022\017scan_context_io\"(\n\005T"
    "rans\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\"2\n"
    "\004Quat\022\t\n\001w\030\001 \002(\002\022\t\n\001x\030\002 \002(\002\022\t\n\001y\030\003 \002(\002\022\t"
    "\n\001z\030\004 \002(\002\"O\n\010KeyFrame\022 \n\001q\030\001 \002(\0132\025.scan_"
    "context_io.Quat\022!\n\001t\030\002 \002(\0132\026.scan_contex"
    "t_io.Trans\"4\n\tKeyFrames\022\'\n\004data\030\001 \003(\0132\031."
    "scan_context_io.KeyFrame", 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "key_frames.proto", &protobuf_RegisterTypes);
  Trans::default_instance_ = new Trans();
  Quat::default_instance_ = new Quat();
  KeyFrame::default_instance_ = new KeyFrame();
  KeyFrames::default_instance_ = new KeyFrames();
  Trans::default_instance_->InitAsDefaultInstance();
  Quat::default_instance_->InitAsDefaultInstance();
  KeyFrame::default_instance_->InitAsDefaultInstance();
  KeyFrames::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_key_5fframes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_key_5fframes_2eproto {
  StaticDescriptorInitializer_key_5fframes_2eproto() {
    protobuf_AddDesc_key_5fframes_2eproto();
  }
} static_descriptor_initializer_key_5fframes_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trans::kXFieldNumber;
const int Trans::kYFieldNumber;
const int Trans::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trans::Trans()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.Trans)
}

void Trans::InitAsDefaultInstance() {
}

Trans::Trans(const Trans& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scan_context_io.Trans)
}

void Trans::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Trans::~Trans() {
  // @@protoc_insertion_point(destructor:scan_context_io.Trans)
  SharedDtor();
}

void Trans::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Trans::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Trans::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Trans_descriptor_;
}

const Trans& Trans::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_key_5fframes_2eproto();
  return *default_instance_;
}

Trans* Trans::default_instance_ = NULL;

Trans* Trans::New(::google::protobuf::Arena* arena) const {
  Trans* n = new Trans;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Trans::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.Trans)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Trans, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Trans*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Trans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.Trans)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // required float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // required float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.Trans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.Trans)
  return false;
#undef DO_
}

void Trans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.Trans)
  // required float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.Trans)
}

::google::protobuf::uint8* Trans::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.Trans)
  // required float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.Trans)
  return target;
}

int Trans::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.Trans)
  int total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
int Trans::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.Trans)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Trans::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.Trans)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Trans* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Trans>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.Trans)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.Trans)
    MergeFrom(*source);
  }
}

void Trans::MergeFrom(const Trans& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.Trans)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Trans::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.Trans)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trans::CopyFrom(const Trans& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.Trans)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trans::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Trans::Swap(Trans* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trans::InternalSwap(Trans* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Trans::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Trans_descriptor_;
  metadata.reflection = Trans_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Trans

// required float x = 1;
bool Trans::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Trans::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Trans::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Trans::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float Trans::x() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Trans.x)
  return x_;
}
 void Trans::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Trans.x)
}

// required float y = 2;
bool Trans::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Trans::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Trans::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Trans::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float Trans::y() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Trans.y)
  return y_;
}
 void Trans::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Trans.y)
}

// required float z = 3;
bool Trans::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Trans::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Trans::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Trans::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float Trans::z() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Trans.z)
  return z_;
}
 void Trans::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Trans.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quat::kWFieldNumber;
const int Quat::kXFieldNumber;
const int Quat::kYFieldNumber;
const int Quat::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quat::Quat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.Quat)
}

void Quat::InitAsDefaultInstance() {
}

Quat::Quat(const Quat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scan_context_io.Quat)
}

void Quat::SharedCtor() {
  _cached_size_ = 0;
  w_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Quat::~Quat() {
  // @@protoc_insertion_point(destructor:scan_context_io.Quat)
  SharedDtor();
}

void Quat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Quat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Quat_descriptor_;
}

const Quat& Quat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_key_5fframes_2eproto();
  return *default_instance_;
}

Quat* Quat::default_instance_ = NULL;

Quat* Quat::New(::google::protobuf::Arena* arena) const {
  Quat* n = new Quat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quat::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.Quat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Quat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Quat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(w_, z_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Quat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.Quat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float w = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
          set_has_w();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // required float x = 2;
      case 2: {
        if (tag == 21) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // required float y = 3;
      case 3: {
        if (tag == 29) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_z;
        break;
      }

      // required float z = 4;
      case 4: {
        if (tag == 37) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.Quat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.Quat)
  return false;
#undef DO_
}

void Quat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.Quat)
  // required float w = 1;
  if (has_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->w(), output);
  }

  // required float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // required float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // required float z = 4;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.Quat)
}

::google::protobuf::uint8* Quat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.Quat)
  // required float w = 1;
  if (has_w()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->w(), target);
  }

  // required float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // required float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // required float z = 4;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.Quat)
  return target;
}

int Quat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.Quat)
  int total_size = 0;

  if (has_w()) {
    // required float w = 1;
    total_size += 1 + 4;
  }

  if (has_x()) {
    // required float x = 2;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 3;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
int Quat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.Quat)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required float w = 1;
    total_size += 1 + 4;

    // required float x = 2;
    total_size += 1 + 4;

    // required float y = 3;
    total_size += 1 + 4;

    // required float z = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.Quat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Quat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Quat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.Quat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.Quat)
    MergeFrom(*source);
  }
}

void Quat::MergeFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.Quat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_w()) {
      set_w(from.w());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Quat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quat::CopyFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quat::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Quat::Swap(Quat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quat::InternalSwap(Quat* other) {
  std::swap(w_, other->w_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Quat_descriptor_;
  metadata.reflection = Quat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Quat

// required float w = 1;
bool Quat::has_w() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Quat::set_has_w() {
  _has_bits_[0] |= 0x00000001u;
}
void Quat::clear_has_w() {
  _has_bits_[0] &= ~0x00000001u;
}
void Quat::clear_w() {
  w_ = 0;
  clear_has_w();
}
 float Quat::w() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.w)
  return w_;
}
 void Quat::set_w(float value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.w)
}

// required float x = 2;
bool Quat::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Quat::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void Quat::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void Quat::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float Quat::x() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.x)
  return x_;
}
 void Quat::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.x)
}

// required float y = 3;
bool Quat::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Quat::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void Quat::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void Quat::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float Quat::y() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.y)
  return y_;
}
 void Quat::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.y)
}

// required float z = 4;
bool Quat::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Quat::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
void Quat::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
void Quat::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float Quat::z() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.z)
  return z_;
}
 void Quat::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyFrame::kQFieldNumber;
const int KeyFrame::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyFrame::KeyFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.KeyFrame)
}

void KeyFrame::InitAsDefaultInstance() {
  q_ = const_cast< ::scan_context_io::Quat*>(&::scan_context_io::Quat::default_instance());
  t_ = const_cast< ::scan_context_io::Trans*>(&::scan_context_io::Trans::default_instance());
}

KeyFrame::KeyFrame(const KeyFrame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scan_context_io.KeyFrame)
}

void KeyFrame::SharedCtor() {
  _cached_size_ = 0;
  q_ = NULL;
  t_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KeyFrame::~KeyFrame() {
  // @@protoc_insertion_point(destructor:scan_context_io.KeyFrame)
  SharedDtor();
}

void KeyFrame::SharedDtor() {
  if (this != default_instance_) {
    delete q_;
    delete t_;
  }
}

void KeyFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyFrame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyFrame_descriptor_;
}

const KeyFrame& KeyFrame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_key_5fframes_2eproto();
  return *default_instance_;
}

KeyFrame* KeyFrame::default_instance_ = NULL;

KeyFrame* KeyFrame::New(::google::protobuf::Arena* arena) const {
  KeyFrame* n = new KeyFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.KeyFrame)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_q()) {
      if (q_ != NULL) q_->::scan_context_io::Quat::Clear();
    }
    if (has_t()) {
      if (t_ != NULL) t_->::scan_context_io::Trans::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KeyFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.KeyFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .scan_context_io.Quat q = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_t;
        break;
      }

      // required .scan_context_io.Trans t = 2;
      case 2: {
        if (tag == 18) {
         parse_t:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.KeyFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.KeyFrame)
  return false;
#undef DO_
}

void KeyFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.KeyFrame)
  // required .scan_context_io.Quat q = 1;
  if (has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->q_, output);
  }

  // required .scan_context_io.Trans t = 2;
  if (has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->t_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.KeyFrame)
}

::google::protobuf::uint8* KeyFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.KeyFrame)
  // required .scan_context_io.Quat q = 1;
  if (has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->q_, false, target);
  }

  // required .scan_context_io.Trans t = 2;
  if (has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->t_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.KeyFrame)
  return target;
}

int KeyFrame::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.KeyFrame)
  int total_size = 0;

  if (has_q()) {
    // required .scan_context_io.Quat q = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->q_);
  }

  if (has_t()) {
    // required .scan_context_io.Trans t = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->t_);
  }

  return total_size;
}
int KeyFrame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.KeyFrame)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .scan_context_io.Quat q = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->q_);

    // required .scan_context_io.Trans t = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->t_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.KeyFrame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KeyFrame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.KeyFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.KeyFrame)
    MergeFrom(*source);
  }
}

void KeyFrame::MergeFrom(const KeyFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.KeyFrame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_q()) {
      mutable_q()->::scan_context_io::Quat::MergeFrom(from.q());
    }
    if (from.has_t()) {
      mutable_t()->::scan_context_io::Trans::MergeFrom(from.t());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void KeyFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.KeyFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyFrame::CopyFrom(const KeyFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.KeyFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyFrame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_q()) {
    if (!this->q_->IsInitialized()) return false;
  }
  if (has_t()) {
    if (!this->t_->IsInitialized()) return false;
  }
  return true;
}

void KeyFrame::Swap(KeyFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyFrame::InternalSwap(KeyFrame* other) {
  std::swap(q_, other->q_);
  std::swap(t_, other->t_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyFrame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyFrame_descriptor_;
  metadata.reflection = KeyFrame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyFrame

// required .scan_context_io.Quat q = 1;
bool KeyFrame::has_q() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeyFrame::set_has_q() {
  _has_bits_[0] |= 0x00000001u;
}
void KeyFrame::clear_has_q() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeyFrame::clear_q() {
  if (q_ != NULL) q_->::scan_context_io::Quat::Clear();
  clear_has_q();
}
const ::scan_context_io::Quat& KeyFrame::q() const {
  // @@protoc_insertion_point(field_get:scan_context_io.KeyFrame.q)
  return q_ != NULL ? *q_ : *default_instance_->q_;
}
::scan_context_io::Quat* KeyFrame::mutable_q() {
  set_has_q();
  if (q_ == NULL) {
    q_ = new ::scan_context_io::Quat;
  }
  // @@protoc_insertion_point(field_mutable:scan_context_io.KeyFrame.q)
  return q_;
}
::scan_context_io::Quat* KeyFrame::release_q() {
  // @@protoc_insertion_point(field_release:scan_context_io.KeyFrame.q)
  clear_has_q();
  ::scan_context_io::Quat* temp = q_;
  q_ = NULL;
  return temp;
}
void KeyFrame::set_allocated_q(::scan_context_io::Quat* q) {
  delete q_;
  q_ = q;
  if (q) {
    set_has_q();
  } else {
    clear_has_q();
  }
  // @@protoc_insertion_point(field_set_allocated:scan_context_io.KeyFrame.q)
}

// required .scan_context_io.Trans t = 2;
bool KeyFrame::has_t() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KeyFrame::set_has_t() {
  _has_bits_[0] |= 0x00000002u;
}
void KeyFrame::clear_has_t() {
  _has_bits_[0] &= ~0x00000002u;
}
void KeyFrame::clear_t() {
  if (t_ != NULL) t_->::scan_context_io::Trans::Clear();
  clear_has_t();
}
const ::scan_context_io::Trans& KeyFrame::t() const {
  // @@protoc_insertion_point(field_get:scan_context_io.KeyFrame.t)
  return t_ != NULL ? *t_ : *default_instance_->t_;
}
::scan_context_io::Trans* KeyFrame::mutable_t() {
  set_has_t();
  if (t_ == NULL) {
    t_ = new ::scan_context_io::Trans;
  }
  // @@protoc_insertion_point(field_mutable:scan_context_io.KeyFrame.t)
  return t_;
}
::scan_context_io::Trans* KeyFrame::release_t() {
  // @@protoc_insertion_point(field_release:scan_context_io.KeyFrame.t)
  clear_has_t();
  ::scan_context_io::Trans* temp = t_;
  t_ = NULL;
  return temp;
}
void KeyFrame::set_allocated_t(::scan_context_io::Trans* t) {
  delete t_;
  t_ = t;
  if (t) {
    set_has_t();
  } else {
    clear_has_t();
  }
  // @@protoc_insertion_point(field_set_allocated:scan_context_io.KeyFrame.t)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyFrames::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyFrames::KeyFrames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.KeyFrames)
}

void KeyFrames::InitAsDefaultInstance() {
}

KeyFrames::KeyFrames(const KeyFrames& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scan_context_io.KeyFrames)
}

void KeyFrames::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KeyFrames::~KeyFrames() {
  // @@protoc_insertion_point(destructor:scan_context_io.KeyFrames)
  SharedDtor();
}

void KeyFrames::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KeyFrames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyFrames::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyFrames_descriptor_;
}

const KeyFrames& KeyFrames::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_key_5fframes_2eproto();
  return *default_instance_;
}

KeyFrames* KeyFrames::default_instance_ = NULL;

KeyFrames* KeyFrames::New(::google::protobuf::Arena* arena) const {
  KeyFrames* n = new KeyFrames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyFrames::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.KeyFrames)
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KeyFrames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.KeyFrames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .scan_context_io.KeyFrame data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.KeyFrames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.KeyFrames)
  return false;
#undef DO_
}

void KeyFrames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.KeyFrames)
  // repeated .scan_context_io.KeyFrame data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.KeyFrames)
}

::google::protobuf::uint8* KeyFrames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.KeyFrames)
  // repeated .scan_context_io.KeyFrame data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.KeyFrames)
  return target;
}

int KeyFrames::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.KeyFrames)
  int total_size = 0;

  // repeated .scan_context_io.KeyFrame data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyFrames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.KeyFrames)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KeyFrames* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyFrames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.KeyFrames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.KeyFrames)
    MergeFrom(*source);
  }
}

void KeyFrames::MergeFrom(const KeyFrames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.KeyFrames)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void KeyFrames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.KeyFrames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyFrames::CopyFrom(const KeyFrames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.KeyFrames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyFrames::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void KeyFrames::Swap(KeyFrames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyFrames::InternalSwap(KeyFrames* other) {
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyFrames::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyFrames_descriptor_;
  metadata.reflection = KeyFrames_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyFrames

// repeated .scan_context_io.KeyFrame data = 1;
int KeyFrames::data_size() const {
  return data_.size();
}
void KeyFrames::clear_data() {
  data_.Clear();
}
const ::scan_context_io::KeyFrame& KeyFrames::data(int index) const {
  // @@protoc_insertion_point(field_get:scan_context_io.KeyFrames.data)
  return data_.Get(index);
}
::scan_context_io::KeyFrame* KeyFrames::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:scan_context_io.KeyFrames.data)
  return data_.Mutable(index);
}
::scan_context_io::KeyFrame* KeyFrames::add_data() {
  // @@protoc_insertion_point(field_add:scan_context_io.KeyFrames.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::scan_context_io::KeyFrame >*
KeyFrames::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:scan_context_io.KeyFrames.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::scan_context_io::KeyFrame >&
KeyFrames::data() const {
  // @@protoc_insertion_point(field_list:scan_context_io.KeyFrames.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace scan_context_io

// @@protoc_insertion_point(global_scope)
