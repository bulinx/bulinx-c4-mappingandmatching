// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scan_contexts.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lidar_localization/models/scan_context_manager/scan_contexts.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace scan_context_io {

namespace {

const ::google::protobuf::Descriptor* ScanContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScanContext_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScanContexts_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScanContexts_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_scan_5fcontexts_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_scan_5fcontexts_2eproto() {
  protobuf_AddDesc_scan_5fcontexts_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "scan_contexts.proto");
  GOOGLE_CHECK(file != NULL);
  ScanContext_descriptor_ = file->message_type(0);
  static const int ScanContext_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContext, data_),
  };
  ScanContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScanContext_descriptor_,
      ScanContext::default_instance_,
      ScanContext_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContext, _has_bits_[0]),
      -1,
      -1,
      sizeof(ScanContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContext, _internal_metadata_),
      -1);
  ScanContexts_descriptor_ = file->message_type(1);
  static const int ScanContexts_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContexts, num_rings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContexts, num_sectors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContexts, data_),
  };
  ScanContexts_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScanContexts_descriptor_,
      ScanContexts::default_instance_,
      ScanContexts_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContexts, _has_bits_[0]),
      -1,
      -1,
      sizeof(ScanContexts),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanContexts, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_scan_5fcontexts_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScanContext_descriptor_, &ScanContext::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScanContexts_descriptor_, &ScanContexts::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_scan_5fcontexts_2eproto() {
  delete ScanContext::default_instance_;
  delete ScanContext_reflection_;
  delete ScanContexts::default_instance_;
  delete ScanContexts_reflection_;
}

void protobuf_AddDesc_scan_5fcontexts_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_scan_5fcontexts_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023scan_contexts.proto\022\017scan_context_io\"\033"
    "\n\013ScanContext\022\014\n\004data\030\001 \003(\002\"b\n\014ScanConte"
    "xts\022\021\n\tnum_rings\030\001 \002(\005\022\023\n\013num_sectors\030\002 "
    "\002(\005\022*\n\004data\030\003 \003(\0132\034.scan_context_io.Scan"
    "Context", 167);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scan_contexts.proto", &protobuf_RegisterTypes);
  ScanContext::default_instance_ = new ScanContext();
  ScanContexts::default_instance_ = new ScanContexts();
  ScanContext::default_instance_->InitAsDefaultInstance();
  ScanContexts::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_scan_5fcontexts_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_scan_5fcontexts_2eproto {
  StaticDescriptorInitializer_scan_5fcontexts_2eproto() {
    protobuf_AddDesc_scan_5fcontexts_2eproto();
  }
} static_descriptor_initializer_scan_5fcontexts_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanContext::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanContext::ScanContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.ScanContext)
}

void ScanContext::InitAsDefaultInstance() {
}

ScanContext::ScanContext(const ScanContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scan_context_io.ScanContext)
}

void ScanContext::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScanContext::~ScanContext() {
  // @@protoc_insertion_point(destructor:scan_context_io.ScanContext)
  SharedDtor();
}

void ScanContext::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScanContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScanContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScanContext_descriptor_;
}

const ScanContext& ScanContext::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scan_5fcontexts_2eproto();
  return *default_instance_;
}

ScanContext* ScanContext::default_instance_ = NULL;

ScanContext* ScanContext::New(::google::protobuf::Arena* arena) const {
  ScanContext* n = new ScanContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScanContext::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.ScanContext)
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ScanContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.ScanContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float data = 1;
      case 1: {
        if (tag == 13) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_data())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.ScanContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.ScanContext)
  return false;
#undef DO_
}

void ScanContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.ScanContext)
  // repeated float data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.ScanContext)
}

::google::protobuf::uint8* ScanContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.ScanContext)
  // repeated float data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.ScanContext)
  return target;
}

int ScanContext::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.ScanContext)
  int total_size = 0;

  // repeated float data = 1;
  {
    int data_size = 0;
    data_size = 4 * this->data_size();
    total_size += 1 * this->data_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScanContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.ScanContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScanContext* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.ScanContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.ScanContext)
    MergeFrom(*source);
  }
}

void ScanContext::MergeFrom(const ScanContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.ScanContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ScanContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.ScanContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanContext::CopyFrom(const ScanContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.ScanContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanContext::IsInitialized() const {

  return true;
}

void ScanContext::Swap(ScanContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanContext::InternalSwap(ScanContext* other) {
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScanContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScanContext_descriptor_;
  metadata.reflection = ScanContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScanContext

// repeated float data = 1;
int ScanContext::data_size() const {
  return data_.size();
}
void ScanContext::clear_data() {
  data_.Clear();
}
 float ScanContext::data(int index) const {
  // @@protoc_insertion_point(field_get:scan_context_io.ScanContext.data)
  return data_.Get(index);
}
 void ScanContext::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:scan_context_io.ScanContext.data)
}
 void ScanContext::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:scan_context_io.ScanContext.data)
}
 const ::google::protobuf::RepeatedField< float >&
ScanContext::data() const {
  // @@protoc_insertion_point(field_list:scan_context_io.ScanContext.data)
  return data_;
}
 ::google::protobuf::RepeatedField< float >*
ScanContext::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:scan_context_io.ScanContext.data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanContexts::kNumRingsFieldNumber;
const int ScanContexts::kNumSectorsFieldNumber;
const int ScanContexts::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanContexts::ScanContexts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.ScanContexts)
}

void ScanContexts::InitAsDefaultInstance() {
}

ScanContexts::ScanContexts(const ScanContexts& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scan_context_io.ScanContexts)
}

void ScanContexts::SharedCtor() {
  _cached_size_ = 0;
  num_rings_ = 0;
  num_sectors_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScanContexts::~ScanContexts() {
  // @@protoc_insertion_point(destructor:scan_context_io.ScanContexts)
  SharedDtor();
}

void ScanContexts::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScanContexts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScanContexts::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScanContexts_descriptor_;
}

const ScanContexts& ScanContexts::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scan_5fcontexts_2eproto();
  return *default_instance_;
}

ScanContexts* ScanContexts::default_instance_ = NULL;

ScanContexts* ScanContexts::New(::google::protobuf::Arena* arena) const {
  ScanContexts* n = new ScanContexts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScanContexts::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.ScanContexts)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ScanContexts, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ScanContexts*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(num_rings_, num_sectors_);

#undef ZR_HELPER_
#undef ZR_

  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ScanContexts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.ScanContexts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 num_rings = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_rings_)));
          set_has_num_rings();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_sectors;
        break;
      }

      // required int32 num_sectors = 2;
      case 2: {
        if (tag == 16) {
         parse_num_sectors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_sectors_)));
          set_has_num_sectors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .scan_context_io.ScanContext data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.ScanContexts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.ScanContexts)
  return false;
#undef DO_
}

void ScanContexts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.ScanContexts)
  // required int32 num_rings = 1;
  if (has_num_rings()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_rings(), output);
  }

  // required int32 num_sectors = 2;
  if (has_num_sectors()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_sectors(), output);
  }

  // repeated .scan_context_io.ScanContext data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.ScanContexts)
}

::google::protobuf::uint8* ScanContexts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.ScanContexts)
  // required int32 num_rings = 1;
  if (has_num_rings()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_rings(), target);
  }

  // required int32 num_sectors = 2;
  if (has_num_sectors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_sectors(), target);
  }

  // repeated .scan_context_io.ScanContext data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->data(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.ScanContexts)
  return target;
}

int ScanContexts::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.ScanContexts)
  int total_size = 0;

  if (has_num_rings()) {
    // required int32 num_rings = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_rings());
  }

  if (has_num_sectors()) {
    // required int32 num_sectors = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_sectors());
  }

  return total_size;
}
int ScanContexts::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.ScanContexts)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 num_rings = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_rings());

    // required int32 num_sectors = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_sectors());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .scan_context_io.ScanContext data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScanContexts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.ScanContexts)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScanContexts* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanContexts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.ScanContexts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.ScanContexts)
    MergeFrom(*source);
  }
}

void ScanContexts::MergeFrom(const ScanContexts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.ScanContexts)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num_rings()) {
      set_num_rings(from.num_rings());
    }
    if (from.has_num_sectors()) {
      set_num_sectors(from.num_sectors());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ScanContexts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.ScanContexts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanContexts::CopyFrom(const ScanContexts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.ScanContexts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanContexts::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ScanContexts::Swap(ScanContexts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanContexts::InternalSwap(ScanContexts* other) {
  std::swap(num_rings_, other->num_rings_);
  std::swap(num_sectors_, other->num_sectors_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScanContexts::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScanContexts_descriptor_;
  metadata.reflection = ScanContexts_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScanContexts

// required int32 num_rings = 1;
bool ScanContexts::has_num_rings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ScanContexts::set_has_num_rings() {
  _has_bits_[0] |= 0x00000001u;
}
void ScanContexts::clear_has_num_rings() {
  _has_bits_[0] &= ~0x00000001u;
}
void ScanContexts::clear_num_rings() {
  num_rings_ = 0;
  clear_has_num_rings();
}
 ::google::protobuf::int32 ScanContexts::num_rings() const {
  // @@protoc_insertion_point(field_get:scan_context_io.ScanContexts.num_rings)
  return num_rings_;
}
 void ScanContexts::set_num_rings(::google::protobuf::int32 value) {
  set_has_num_rings();
  num_rings_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.ScanContexts.num_rings)
}

// required int32 num_sectors = 2;
bool ScanContexts::has_num_sectors() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ScanContexts::set_has_num_sectors() {
  _has_bits_[0] |= 0x00000002u;
}
void ScanContexts::clear_has_num_sectors() {
  _has_bits_[0] &= ~0x00000002u;
}
void ScanContexts::clear_num_sectors() {
  num_sectors_ = 0;
  clear_has_num_sectors();
}
 ::google::protobuf::int32 ScanContexts::num_sectors() const {
  // @@protoc_insertion_point(field_get:scan_context_io.ScanContexts.num_sectors)
  return num_sectors_;
}
 void ScanContexts::set_num_sectors(::google::protobuf::int32 value) {
  set_has_num_sectors();
  num_sectors_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.ScanContexts.num_sectors)
}

// repeated .scan_context_io.ScanContext data = 3;
int ScanContexts::data_size() const {
  return data_.size();
}
void ScanContexts::clear_data() {
  data_.Clear();
}
const ::scan_context_io::ScanContext& ScanContexts::data(int index) const {
  // @@protoc_insertion_point(field_get:scan_context_io.ScanContexts.data)
  return data_.Get(index);
}
::scan_context_io::ScanContext* ScanContexts::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:scan_context_io.ScanContexts.data)
  return data_.Mutable(index);
}
::scan_context_io::ScanContext* ScanContexts::add_data() {
  // @@protoc_insertion_point(field_add:scan_context_io.ScanContexts.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::scan_context_io::ScanContext >*
ScanContexts::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:scan_context_io.ScanContexts.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::scan_context_io::ScanContext >&
ScanContexts::data() const {
  // @@protoc_insertion_point(field_list:scan_context_io.ScanContexts.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace scan_context_io

// @@protoc_insertion_point(global_scope)
